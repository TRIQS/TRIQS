Reference C++ API for triqs::gfs
################################



Type aliases
------------

+-----------------------+-------------------------+--+
| dcomplex              | std::complex<double>    |  |
+-----------------------+-------------------------+--+
| matsubara_freq_domain | matsubara_domain<true>  |  |
+-----------------------+-------------------------+--+
| matsubara_time_domain | matsubara_domain<false> |  |
+-----------------------+-------------------------+--+


Classes
-------

.. table::
   :width: 50% 50%

+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`all_t <triqs__gfs__all_t>`                                                                                                 | the dummy variable                                                                                          |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_mesh <triqs__gfs__gf_mesh>`                                                                                             | The mesh for each Var                                                                                       |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`mesh_point <triqs__gfs__mesh_point>`                                                                                       | The mesh point for each mesh                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`mesh_pt_generator <triqs__gfs__mesh_pt_generator>`                                                                         | FIXME : remove boost !                                                                                      |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`matsubara_freq <triqs__gfs__matsubara_freq>`                                                                               | A matsubara frequency, i.e.                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`matsubara_domain <triqs__gfs__matsubara_domain>`                                                                           | ---------------------------------------------------------------------------------------------------------   |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`tuple_com <triqs__gfs__tuple_com>`                                                                                         | ---------------------------------------------------------------------------------------------------         |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`interpol_data_0d_t <triqs__gfs__interpol_data_0d_t>`                                                                       | FIXME : DOC                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`interpol_data_lin_t <triqs__gfs__interpol_data_lin_t>`                                                                     | FIXME CHANGE the order fo the template, it looks strange to accesss W                                       |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`interpol_data_all_t <triqs__gfs__interpol_data_all_t>`                                                                     | FIXME : DOC                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`mesh_point\<linear_mesh\<Domain\>\> <triqs__gfs__mesh_pointLTlinear_meshLTDomainGTGT>`                                     | ---------------------------------------------------------------------------                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_mesh\<imtime\> <triqs__gfs__gf_meshLTimtimeGT>`                                                                         | Imaginary-time mesh                                                                                         |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`tail_fitter <triqs__gfs__tail_fitter>`                                                                                     | ----------------------------------------------------------------------------------------------              |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`tail_fitter_handle <triqs__gfs__tail_fitter_handle>`                                                                       | ----------------------------------------------------------------------------------------------              |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`mesh_point\<gf_mesh\<imfreq\>\> <triqs__gfs__mesh_pointLTgf_meshLTimfreqGTGT>`                                             | ---------------------------------------------------------------------------                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_mesh\<imfreq\> <triqs__gfs__gf_meshLTimfreqGT>`                                                                         | Matsubara frequency mesh                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`R_domain <triqs__gfs__R_domain>`                                                                                           | The domain                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`segment_mesh <triqs__gfs__segment_mesh>`                                                                                   | A linear mesh on a segment on R                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_mesh\<legendre\> <triqs__gfs__gf_meshLTlegendreGT>`                                                                     | mesh type and its factories                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`lattice_point <triqs__gfs__lattice_point>`                                                                                 | A lattice point                                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`mesh_point\<cluster_mesh\> <triqs__gfs__mesh_pointLTcluster_meshGT>`                                                       | ---------------------------------------------------------------------------                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_mesh\<brillouin_zone\> <triqs__gfs__gf_meshLTbrillouin_zoneGT>`                                                         | Mesh on Brillouin zone                                                                                      |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_mesh\<cyclic_lattice\> <triqs__gfs__gf_meshLTcyclic_latticeGT>`                                                         | Mesh on real-space lattice                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`get_n_variables <triqs__gfs__get_n_variables>`                                                                             | Get the number of variables                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_evaluator <triqs__gfs__gf_evaluator>`                                                                                   | gf_evaluator regroup functions to evaluate the function.                                                    |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_closest_point <triqs__gfs__gf_closest_point>`                                                                           | ----------------------------------------------------------                                                  |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`closest_pt_wrap <triqs__gfs__closest_pt_wrap>`                                                                             | implementation                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_h5_rw <triqs__gfs__gf_h5_rw>`                                                                                           | ----------------------------------------------------------                                                  |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`mpi_lazy <triqs__gfs__mpi_lazy>`                                                                                           | A small lazy tagged class                                                                                   |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf <triqs__gfs__gf>`                                                                                                       | ----------------------------------------------------------                                                  |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_view <triqs__gfs__gf_view>`                                                                                             | ----------------------  gf_view -----------------------------------------                                   |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_const_view <triqs__gfs__gf_const_view>`                                                                                 | ----------------------  gf_const_view -----------------------------------------                             |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`is_gf <triqs__gfs__is_gf>`                                                                                                 | Is G a gf, gf_view, gf_const_view                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`get_n_variables\<cartesian_product\<Vs...\>\> <triqs__gfs__get_n_variablesLTcartesian_productLTVs___GTGT>`                 | template <typename... Vs>  constexpr int get_n_variables(cartesian_product<Vs...>) { return sizeof...(Vs);} |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_mesh\<cartesian_product\<Vs...\>\> <triqs__gfs__gf_meshLTcartesian_productLTVs___GTGT>`                                 | Cartesian product of meshes                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`mesh_point\<gf_mesh\<cartesian_product\<Vs...\>\>\> <triqs__gfs__mesh_pointLTgf_meshLTcartesian_productLTVs___GTGTGT>`     | ------------------------------------------------                                                            |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_unary_m_expr <triqs__gfs__gf_unary_m_expr>`                                                                             | -------------------------------------------------------------------                                         |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_evaluator\<imfreq,Target\> <triqs__gfs__gf_evaluatorLTimfreq_TargetGT>`                                                 | ----------------------------------------------------------                                                  |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_evaluator\<cartesian_product\<Ms...\>,Target\> <triqs__gfs__gf_evaluatorLTcartesian_productLTMs___GT_TargetGT>`         | now the multi d gf_evaluator itself.                                                                        |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_evaluator\<legendre,matrix_valued\> <triqs__gfs__gf_evaluatorLTlegendre_matrix_valuedGT>`                               | Not finished, not tested                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`block_gf <triqs__gfs__block_gf>`                                                                                           | ----------------------------------------------------------                                                  |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`block_gf_view <triqs__gfs__block_gf_view>`                                                                                 | ----------------------  block_gf_view -----------------------------------------                             |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`block_gf_const_view <triqs__gfs__block_gf_const_view>`                                                                     | ----------------------  block_gf_const_view -----------------------------------------                       |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`block2_gf <triqs__gfs__block2_gf>`                                                                                         | ----------------------  block2_gf -----------------------------------------                                 |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`block2_gf_view <triqs__gfs__block2_gf_view>`                                                                               | ----------------------  block2_gf_view -----------------------------------------                            |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`block2_gf_const_view <triqs__gfs__block2_gf_const_view>`                                                                   | ----------------------  block2_gf_const_view -----------------------------------------                      |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`lazy_transform_t <triqs__gfs__lazy_transform_t>`                                                                           | ------------- Helper Types -----------------------------                                                    |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`bgf_unary_m_expr <triqs__gfs__bgf_unary_m_expr>`                                                                           | -------------------------------------------------------------------                                         |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_h5_after_read <triqs__gfs__gf_h5_after_read>`                                                                           | FIXME : C17 : REMOVE THIS dispatch with a constexpr if                                                      |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_h5_after_read\<imfreq,T\> <triqs__gfs__gf_h5_after_readLTimfreq_TGT>`                                                   | After reading from h5, is the function is for freq >0, unfold it to the full mesh                           |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_closest_point\<imtime,Target\> <triqs__gfs__gf_closest_pointLTimtime_TargetGT>`                                         | -------------------------------------------------------                                                     |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_closest_point_linear_mesh <triqs__gfs__gf_closest_point_linear_mesh>`                                                   | -------------------------------------------------------                                                     |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_closest_point\<brillouin_zone,Target\> <triqs__gfs__gf_closest_pointLTbrillouin_zone_TargetGT>`                         | -------------------------------------------------------                                                     |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_closest_point\<retime,Target\> <triqs__gfs__gf_closest_pointLTretime_TargetGT>`                                         | template <typename Target> struct gf_closest_point<imtime, Target> : gf_closest_point_linear_mesh{};        |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_closest_point\<cartesian_product\<Ms...\>,Target\> <triqs__gfs__gf_closest_pointLTcartesian_productLTMs___GT_TargetGT>` | -------------------------------------------------------                                                     |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`gf_keeper <triqs__gfs__gf_keeper>`                                                                                         | ----------------------------                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------+

.. toctree::
    :hidden:

    gfs/all_t
    gfs/gf_mesh
    gfs/mesh_point
    gfs/mesh_pt_generator
    gfs/matsubara_freq
    gfs/matsubara_domain
    gfs/tuple_com
    gfs/interpol_data_0d_t
    gfs/interpol_data_lin_t
    gfs/interpol_data_all_t
    gfs/mesh_pointLTlinear_meshLTDomainGTGT
    gfs/gf_meshLTimtimeGT
    gfs/tail_fitter
    gfs/tail_fitter_handle
    gfs/mesh_pointLTgf_meshLTimfreqGTGT
    gfs/gf_meshLTimfreqGT
    gfs/R_domain
    gfs/segment_mesh
    gfs/gf_meshLTlegendreGT
    gfs/lattice_point
    gfs/mesh_pointLTcluster_meshGT
    gfs/gf_meshLTbrillouin_zoneGT
    gfs/gf_meshLTcyclic_latticeGT
    gfs/get_n_variables
    gfs/gf_evaluator
    gfs/gf_closest_point
    gfs/closest_pt_wrap
    gfs/gf_h5_rw
    gfs/mpi_lazy
    gfs/gf
    gfs/gf_view
    gfs/gf_const_view
    gfs/is_gf
    gfs/get_n_variablesLTcartesian_productLTVs...GTGT
    gfs/gf_meshLTcartesian_productLTVs...GTGT
    gfs/mesh_pointLTgf_meshLTcartesian_productLTVs...GTGTGT
    gfs/gf_unary_m_expr
    gfs/gf_evaluatorLTimfreq,TargetGT
    gfs/gf_evaluatorLTcartesian_productLTMs...GT,TargetGT
    gfs/gf_evaluatorLTlegendre,matrix_valuedGT
    gfs/block_gf
    gfs/block_gf_view
    gfs/block_gf_const_view
    gfs/block2_gf
    gfs/block2_gf_view
    gfs/block2_gf_const_view
    gfs/lazy_transform_t
    gfs/bgf_unary_m_expr
    gfs/gf_h5_after_read
    gfs/gf_h5_after_readLTimfreq,TGT
    gfs/gf_closest_pointLTimtime,TargetGT
    gfs/gf_closest_point_linear_mesh
    gfs/gf_closest_pointLTbrillouin_zone,TargetGT
    gfs/gf_closest_pointLTretime,TargetGT
    gfs/gf_closest_pointLTcartesian_productLTMs...GT,TargetGT
    gfs/gf_keeper


Functions
---------

+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`sign <sign>`                                                                                   | 1 for Boson, -1 for Fermion                                                                              |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`kronecker <kronecker>`                                                                         | ----- kronecker function : overload for matsubara_freq                                                   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_tuple_com <make_tuple_com>`                                                               | deduction rule. broken on clang ?                                                                        |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`multivar_eval <multivar_eval>`                                                                 |                                                                                                          |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`interpolate_on_segment <interpolate_on_segment>`                                               | Fit the two closest points for x on [x_min, x_max], with a linear weight w                               |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`foreach <foreach>`                                                                             | foreach for this mesh                                                                                    |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`vander <vander>`                                                                               | ----------------------------------------------------------------------------------------------           |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`tail_eval <tail_eval>`                                                                         | Computes sum A_n / om^n                                                                                  |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`find_cell_dims <find_cell_dims>`                                                               | Compute dimensions of a parallelepiped cluster cell using the inverse of the periodization matrix        |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`mesh_point_compatible_to_mesh <mesh_point_compatible_to_mesh>`                                 | check if mesh_point mp is compatible with mesh m. Intented for debug mode only.                          |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`mesh_point_compatible_to_mesh_impl <mesh_point_compatible_to_mesh_impl>`                       | special case for cartesian product, it must be checked for every component.                              |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`get_gf_data_shape <get_gf_data_shape>`                                                         | ----------------------------------------------------------                                               |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`triqs_gf_view_assign_delegation <triqs_gf_view_assign_delegation>`                             | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_gf <make_gf>`                                                                             | Construct a Green function given a Mesh, a Target and a Memory Layout                                    |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`triqs_clef_auto_assign <triqs_clef_auto_assign>`                                               | auto assignment of the gf (gf(om_) << expression fills the functions by evaluation of expression)        |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`triqs_clef_auto_assign_subscript <triqs_clef_auto_assign_subscript>`                           | enable the writing g[om_] << .... also                                                                   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`<deduction guide for gf_mesh> <\<deduction guide for gf_mesh\>>`                               | ---------- Class template argument deduction rules -------------                                         |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`first_mesh <first_mesh>`                                                                       | Short cuts. Experimental                                                                                 |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`mpi_broadcast <mpi_broadcast>`                                                                 | Initiate (lazy) MPI Bcast                                                                                |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`mpi_reduce <mpi_reduce>`                                                                       | Initiate (lazy) MPI Reduce                                                                               |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_block_gf <make_block_gf>`                                                                 |                                                                                                          |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_block_gf_view <make_block_gf_view>`                                                       | Make a block view from the G. Indices are '0', '1', '2', ....                                            |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_block_gf_const_view <make_block_gf_const_view>`                                           | Make a block const_view from the G. Indices are '0', '1', '2', ....                                      |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_block2_gf <make_block2_gf>`                                                               | From the size n x p and the g from a number and a gf to be copied                                        |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_block2_gf_view <make_block2_gf_view>`                                                     | Create block2_gf_view from vector of views                                                               |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_block2_gf_const_view <make_block2_gf_const_view>`                                         | Create block2_gf_const_view from vector of views                                                         |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`map <map>`                                                                                     | the map function itself...                                                                               |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`gf_has_target <gf_has_target>`                                                                 | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`fit_tail <fit_tail>`                                                                           | Product Green Functions                                                                                  |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`fit_hermitian_tail <fit_hermitian_tail>`                                                       | Impose hermiticity on the tail coefficients                                                              |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`fit_tail_no_normalize <fit_tail_no_normalize>`                                                 | Tail-fit without normalization, returns moments rescaled by maximum frequency:  a_n * omega_max^n        |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_zero_tail <make_zero_tail>`                                                               | Create a tail object for a given Green function                                                          |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`slice_target <slice_target>`                                                                   | FIXME : merge the slice_target_to_scalar                                                                 |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`slice_target_to_scalar <slice_target_to_scalar>`                                               | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`reinterpret_scalar_valued_gf_as_matrix_valued <reinterpret_scalar_valued_gf_as_matrix_valued>` | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`inverse <inverse>`                                                                             | FIXME  : unncessary copies                                                                               |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`is_gf_real <is_gf_real>`                                                                       | is_gf_real(g, tolerance).                                                                                |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`real <real>`                                                                                   | Takes the real part of g without check, and returns a new gf with a real target                          |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`transpose <transpose>`                                                                         | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`conj <conj>`                                                                                   | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`set_from_gf_data_mul_LR <set_from_gf_data_mul_LR>`                                             | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_gf_from_real_gf <make_gf_from_real_gf>`                                                   | This function takes a g(i omega_n) on half mesh (positive omega_n) and returns a gf on the whole mesh    |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`is_gf_real_in_tau <is_gf_real_in_tau>`                                                         | Test if gf is real in tau                                                                                |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`is_gf_hermitian <is_gf_hermitian>`                                                             | Test if gf is hermitian                                                                                  |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`positive_freq_view <positive_freq_view>`                                                       | Make a const view of the positive frequency part of the function                                         |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_hermitian <make_hermitian>`                                                               | make_hermitian: Symmetrize the Green function in freq, to ensure its hermiticity (G_ij[iw] = G_ji[-iw]*) |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_real_in_tau <make_real_in_tau>`                                                           | Make_real_in_tau symmetrize the function in freq, to ensure its FT is real.                              |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`restricted_view <restricted_view>`                                                             | ------------------------------------------------------------------------------------------------------   |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`fit_tail_on_window <fit_tail_on_window>`                                                       | FIXME For backward compatibility only                                                                    |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`fit_hermitian_tail_on_window <fit_hermitian_tail_on_window>`                                   | Fit_tail on a window with the constraint of hermitian moment matrices                                    |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`rebinning_tau <rebinning_tau>`                                                                 | -------------------------------------------------------                                                  |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`get_tail <get_tail>`                                                                           | -------------------------------------------------------                                                  |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`density <density>`                                                                             | Density                                                                                                  |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`flatten_2d <flatten_2d>`                                                                       | Makes a copy of the array in matrix, whose first dimension is the n-th dimension of a                    |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`flatten_gf_2d <flatten_gf_2d>`                                                                 | -------------------------------------                                                                    |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_adjoint_mesh <make_adjoint_mesh>`                                                         | FIXME : DOC                                                                                              |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`make_gf_from_fourier <make_gf_from_fourier>`                                                   | FIXME DOC                                                                                                |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`legendre_matsubara_direct <legendre_matsubara_direct>`                                         | ----------------------------                                                                             |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`legendre_matsubara_inverse <legendre_matsubara_inverse>`                                       | ----------------------------                                                                             |
+------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+

.. toctree::
    :hidden:

    gfs/sign
    gfs/kronecker
    gfs/make_tuple_com
    gfs/multivar_eval
    gfs/interpolate_on_segment
    gfs/foreach
    gfs/vander
    gfs/tail_eval
    gfs/find_cell_dims
    gfs/mesh_point_compatible_to_mesh
    gfs/mesh_point_compatible_to_mesh_impl
    gfs/get_gf_data_shape
    gfs/triqs_gf_view_assign_delegation
    gfs/make_gf
    gfs/triqs_clef_auto_assign
    gfs/triqs_clef_auto_assign_subscript
    gfs/<deduction guide for gf_mesh>
    gfs/first_mesh
    gfs/mpi_broadcast
    gfs/mpi_reduce
    gfs/make_block_gf
    gfs/make_block_gf_view
    gfs/make_block_gf_const_view
    gfs/make_block2_gf
    gfs/make_block2_gf_view
    gfs/make_block2_gf_const_view
    gfs/map
    gfs/gf_has_target
    gfs/fit_tail
    gfs/fit_hermitian_tail
    gfs/fit_tail_no_normalize
    gfs/make_zero_tail
    gfs/slice_target
    gfs/slice_target_to_scalar
    gfs/reinterpret_scalar_valued_gf_as_matrix_valued
    gfs/inverse
    gfs/is_gf_real
    gfs/real
    gfs/transpose
    gfs/conj
    gfs/set_from_gf_data_mul_LR
    gfs/make_gf_from_real_gf
    gfs/is_gf_real_in_tau
    gfs/is_gf_hermitian
    gfs/positive_freq_view
    gfs/make_hermitian
    gfs/make_real_in_tau
    gfs/restricted_view
    gfs/fit_tail_on_window
    gfs/fit_hermitian_tail_on_window
    gfs/rebinning_tau
    gfs/get_tail
    gfs/density
    gfs/flatten_2d
    gfs/flatten_gf_2d
    gfs/make_adjoint_mesh
    gfs/make_gf_from_fourier
    gfs/legendre_matsubara_direct
    gfs/legendre_matsubara_inverse